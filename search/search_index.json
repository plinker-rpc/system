{
    "docs": [
        {
            "location": "/", 
            "text": "System\n\n\nA system component which gives you access to server information.\n\n\nInstall\n\n\nRequire this package with composer using the following command:\n\n\n$ composer require plinker/system\n\n\n\n\n\nClient\n\n\nCreating a client instance is done as follows:\n\n\n?php\n\n\nrequire\n \nvendor/autoload.php\n;\n\n\n\n/**\n\n\n * Initialize plinker client.\n\n\n *\n\n\n * @param string $server - URL to server listener.\n\n\n * @param string $config - server secret, and/or a additional component data\n\n\n */\n\n\n$client\n \n=\n \nnew\n \n\\Plinker\\Core\\Client\n(\n\n    \nhttp://example.com/server.php\n,\n\n    \n[\n\n        \nsecret\n \n=\n \na secret password\n\n    \n]\n\n\n);\n\n\n\n// or using global function\n\n\n$client\n \n=\n \nplinker_client\n(\nhttp://example.com/server.php\n,\n \na secret password\n);\n\n\n\n\n\n\nMethods\n\n\nOnce setup, you call the class though its namespace to its method.\n\n\nEnumerate\n\n\nThe enumerate method is used to call multiple methods in a single call to reduce RPC requests.\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nmethods\n\n\nstring\n\n\narray\n\n\nA string or an array of methods\n\n\n\n\n\n\nparams\n\n\narray\n\n\nAn array of params\n\n\n[]\n\n\n\n\n\n\n\n\nThe method could be used to call a single method, or multiple with parameters.\n\n\nCall\n\n\n$client-\nsystem-\nenumerate([\n\n\n    \narch\n,\n\n\n    \nhostname\n,\n\n\n    \ndisks\n =\n [\n/\n],\n\n\n    \nping\n =\n [\nhttps://google.com\n],\n\n\n]);\n\n\n\n// or single method\n\n\n$client-\nsystem-\nenumerate(\ndisks\n, [\n/\n]);\n\n\n\n\n\n\nResponse\n\n\nArray\n(\n    [arch] =\n x86_64\n\n    [hostname] =\n plinker\n    [disks] =\n Array\n        (\n            [0] =\n Array\n                (\n                    [Filesystem] =\n /dev/sdb1\n                    [Type] =\n ext4\n                    [Size] =\n 95G\n                    [Used] =\n 85G\n                    [Avail] =\n 5.2G\n                    [Used (%)] =\n 95%\n                    [Mounted] =\n /\n                )\n\n        )\n\n    [ping] =\n -1\n)\n\n\n\n\n\nArch\n\n\nReturns the system architecture.\n\n\nCall\n\n\n$client-\nsystem-\narch();\n\n\n\n\n\n\nResponse\n\n\nx86_64\n\n\n\n\n\nClear Swap\n\n\nClear swap space, \nrequires root, so should be used with task\n.\n\n\nCall\n\n\n$client-\nsystem-\nclear_swap();\n\n\n\n\n\n\nResponse\n\n\n\n\n\n\n\n\nCPU Info\n\n\nReturns CPU information from \n/proc/cpuinfo\n.\n\n\nCall\n\n\n$client-\nsystem-\ncpuinfo();\n\n\n\n\n\n\nResponse\n\n\nprocessor   : 0\nvendor_id   : AuthenticAMD\ncpu family  : 16\nmodel       : 4\nmodel name  : AMD Phenom(tm) II X2 555 Processor\nstepping    : 3\nmicrocode   : 0x10000b6\ncpu MHz     : 2500.000\ncache size  : 512 KB\nphysical id : 0\nsiblings    : 2\ncore id     : 0\ncpu cores   : 2\napicid      : 0\ninitial apicid  : 0\nfpu     : yes\nfpu_exception   : yes\ncpuid level : 5\nwp      : yes\nflags       : fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 ht syscall nx mmxext fxsr_opt pdpe1gb rdtscp lm 3dnowext 3dnow constant_tsc rep_good nopl nonstop_tsc cpuid extd_apicid pni monitor cx16 popcnt lahf_lm cmp_legacy svm extapic cr8_legacy abm sse4a misalignsse 3dnowprefetch osvw ibs skinit wdt hw_pstate retpoline retpoline_amd rsb_ctxsw vmmcall npt lbrv svm_lock nrip_save\nbugs        : tlb_mmatch apic_c1e fxsave_leak sysret_ss_attrs null_seg amd_e400 spectre_v1 spectre_v2\nbogomips    : 6429.18\nTLB size    : 1024 4K pages\nclflush size    : 64\ncache_alignment : 64\naddress sizes   : 48 bits physical, 48 bits virtual\npower management: ts ttp tm stc 100mhzsteps hwpstate\n\nprocessor   : 1\nvendor_id   : AuthenticAMD\ncpu family  : 16\nmodel       : 4\nmodel name  : AMD Phenom(tm) II X2 555 Processor\nstepping    : 3\nmicrocode   : 0x10000b6\ncpu MHz     : 2500.000\ncache size  : 512 KB\nphysical id : 0\nsiblings    : 2\ncore id     : 1\ncpu cores   : 2\napicid      : 1\ninitial apicid  : 1\nfpu     : yes\nfpu_exception   : yes\ncpuid level : 5\nwp      : yes\nflags       : fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 ht syscall nx mmxext fxsr_opt pdpe1gb rdtscp lm 3dnowext 3dnow constant_tsc rep_good nopl nonstop_tsc cpuid extd_apicid pni monitor cx16 popcnt lahf_lm cmp_legacy svm extapic cr8_legacy abm sse4a misalignsse 3dnowprefetch osvw ibs skinit wdt hw_pstate retpoline retpoline_amd rsb_ctxsw vmmcall npt lbrv svm_lock nrip_save\nbugs        : tlb_mmatch apic_c1e fxsave_leak sysret_ss_attrs null_seg amd_e400 spectre_v1 spectre_v2\nbogomips    : 6429.18\nTLB size    : 1024 4K pages\nclflush size    : 64\ncache_alignment : 64\naddress sizes   : 48 bits physical, 48 bits virtual\npower management: ts ttp tm stc 100mhzsteps hwpstate\n\n\n\n\n\nDisk Space\n\n\nReturns disk space left in percentage.\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\npath\n\n\nstring\n\n\nA directory of the filesystem or disk partition.\n\n\n/\n\n\n\n\n\n\n\n\nCall\n\n\n$client-\nsystem-\ndisk_space();\n\n\n\n\n\n\nResponse\n\n\n71\n\n\n\n\n\nDisks\n\n\n.....\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nparse\n\n\nbool\n\n\nParse output into an array\n\n\ntrue\n\n\n\n\n\n\n\n\nCall\n\n\n$client-\nsystem-\ndisks();\n\n\n\n// dont parse\n\n\n$client-\nsystem-\ndisks(false);\n\n\n\n\n\n\nResponse\n\n\n// Parsed\nArray\n(\n    [0] =\n Array\n        (\n            [Filesystem] =\n /dev/sdb1\n            [Type] =\n ext4\n            [Size] =\n 95G\n            [Used] =\n 85G\n            [Avail] =\n 5.2G\n            [Used (%)] =\n 95%\n            [Mounted] =\n /\n        )\n\n)\n\n// Unparsed\nFilesystem     Type  Size  Used Avail Use% Mounted on\n/dev/sdb1      ext4   95G   85G  5.2G  95% /\n\n\n\n\n\nDistro\n\n\nGet system distro name.\n\n\nCall\n\n\n$client-\nsystem-\ndistro();\n\n\n\n\n\n\nResponse\n\n\nUBUNTU\n\n\n\n\n\nDrop Cache\n\n\nDrop memory caches, \nrequires root, so should be used with task\n.\n\n\nCall\n\n\n$client-\nsystem-\ndrop_cache();\n\n\n\n\n\n\nResponse\n\n\ntrue\n\n\n\n\n\nHostname\n\n\nGet the systems hostname.\n\n\nCall\n\n\n$client-\nsystem-\nhostname();\n\n\n\n\n\n\nResponse\n\n\nplinker\n\n\n\n\n\nLoad\n\n\nGet the systems load averages.\n\n\nCall\n\n\n$client-\nsystem-\nload();\n\n\n\n\n\n\nResponse\n\n\n0.41 0.50 0.69 1/1474 6223\n\n\n\n\n\nLogins\n\n\nReturns an array of system logins.\n\n\nCall\n\n\n$client-\nsystem-\nlogins();\n\n\n\n\n\n\nResponse\n\n\nArray\n(\n    [0] =\n Array\n        (\n            [User] =\n root\n            [Terminal] =\n pts/1tmux(2972).%0\n            [Date] =\n Fri May 11 08:25\n            [Disconnected] =\n 11:01\n            [Duration] =\n 02:35\n        )\n\n    [1] =\n Array\n        (\n            [User] =\n root\n            [Terminal] =\n pts/1tmux(542).%0\n            [Date] =\n Thu May 10 15:01\n            [Disconnected] =\n 08:11\n            [Duration] =\n 17:09\n        )\n\n    [2] =\n Array\n        (\n            [User] =\n Reboot\n            [Terminal] =\n \n            [Date] =\n \n            [Disconnected] =\n \n            [Duration] =\n \n        )\n\n    [3] =\n Array\n        (\n            [User] =\n root\n            [Terminal] =\n pts/1tmux(5310).%0\n            [Date] =\n Thu May 10 07:42\n            [Disconnected] =\n crash\n            [Duration] =\n 07:19\n        )\n    )\n    ... snip\n)\n\n\n\n\n\nMachine ID\n\n\nReturns the \nmachine-id\n for the system, generates one if does not have one.\n\n\nCall\n\n\n$client-\nsystem-\nmachine_id();\n\n\n\n\n\n\nResponse\n\n\n82c887bcf6da43e5952fad9fd6ed15b6\n\n\n\n\n\nMemory Stats\n\n\nReturns an array of memory stats for, used, cached and free in percentage values.\n\n\nCall\n\n\n$client-\nsystem-\nmemory_stats();\n\n\n\n\n\n\nResponse\n\n\nArray\n(\n    [used] =\n 15\n    [cache] =\n 0\n    [free] =\n 85\n)\n\n\n\n\n\nMemory Total\n\n\nGet the total amount of memory in kB\n\n\nCall\n\n\n$client-\nsystem-\nmemory_total();\n\n\n\n\n\n\nResponse\n\n\n16167888\n\n\n\n\n\nNetstat\n\n\nGet network connections.\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nparse\n\n\nbool\n\n\nParse output into an array\n\n\ntrue\n\n\n\n\n\n\n\n\nCall\n\n\n$client-\nsystem-\nnetstat();\n\n\n\n\n\n\nResponse\n\n\nArray\n(\n    [0] =\n Array\n        (\n            [Proto] =\n tcp\n            [Recv-Q] =\n 0\n            [Send-Q] =\n 0\n            [Local Address] =\n 0.0.0.0:80\n            [Foreign Address] =\n 0.0.0.0:*\n            [State] =\n LISTEN\n            [PID/Program] =\n 1169/nginx:\n            [Process Name] =\n worker\n        )\n    ... snip\n)\n\n\n\n\n\nPing\n\n\nPing a hostname and return connection timing in milliseconds.\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nhost\n\n\nstring\n\n\nServer hostname\n\n\n\n\n\n\n\n\nport\n\n\nint\n\n\nService port, defaults to web\n\n\n80\n\n\n\n\n\n\n\n\nCall\n\n\n$client-\nsystem-\nping(\ngoogle.com\n);\n\n\n\n\n\n\nResponse\n\n\n31.18\n\n\n\n\n\nPStree\n\n\nReturn system process tree\n\n\nCall\n\n\n$client-\nsystem-\npstree();\n\n\n\n\n\n\nResponse\n\n\nsystemd-+-Brackets-+-Brackets---Brackets---Brackets-+-{Chrome_ChildIOT}\n        |          |                                |-2*[{CompositorTileW}]\n        |          |                                |-{Compositor}\n        |          |                                |-{HTMLParserThrea}\n        |          |                                |-{Renderer::FILE}\n        |          |                                |-{WorkerPool/203}\n        |          |                                |-{WorkerPool/210}\n        |          |                                |-{WorkerPool/212}\n        |          |                                `-{WorkerPool/213}\n        |          |-Brackets-node-+-5*[{Brackets-node}]\n        |          |               `-4*[{V8 WorkerThread}]\n        |          |-{AudioThread}\n        |          |-2*[{Brackets}]\n        |          |-3*[{BrowserBlocking}]\n        |          |-{CachePoolWorker}\n        |          |-{Chrome_CacheThr}\n        |          |-{Chrome_DBThread}\n        |          |-{Chrome_DevTools}\n        |          |-{Chrome_FileThre}\n        |          |-{Chrome_FileUser}\n        |          |-{Chrome_IOThread}\n        |          |-{Chrome_ProcessL}\n        |          |-{CompositorTileW}\n        |          |-{IndexedDB}\n        |          |-{NetworkChangeNo}\n        |          |-{WorkerPool/1747}\n        |          |-{gdbus}\n        |          |-{gmain}\n        |          |-{inotify_reader}\n        |          |-{sandbox_ipc_thr}\n        |          `-{threaded-ml}\n        |-LXDui-0.0.9-x86---{LXDui-0.0.9-x86}\n... snip\n\n\n\n\n\nReboot\n\n\nReboot the server, \nrequires root, so should be used with task\n.\n\n\nCall\n\n\n$client-\nsystem-\nreboot();\n\n\n\n\n\n\nResponse\n\n\ntrue\n\n\n\n\n\nServer CPU Usage\n\n\nReturns the current CPU usage in percentage value.\n\n\nCall\n\n\n$client-\nsystem-\nserver_cpu_usage();\n\n\n\n\n\n\nResponse\n\n\n23\n\n\n\n\n\nSystem Updates\n\n\nCheck whether the system has updates.\n\n\nCall\n\n\n$client-\nsystem-\nsystem_updates();\n\n\n\n\n\n\nResponse\n\n\n1=has updates, 0=no updates, -1=unknown\n\n\n\n\n\nTop\n\n\nGet top output as an array.\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nparse\n\n\nbool\n\n\nParse output into an array\n\n\ntrue\n\n\n\n\n\n\n\n\nCall\n\n\n$client-\nsystem-\ntop();\n\n\n\n\n\n\nResponse\n\n\nArray\n(\n    [0] =\n Array\n        (\n            [PID] =\n 27475\n            [USER] =\n user\n            [PR] =\n 20\n            [NI] =\n 0\n            [VIRT] =\n 1785692\n            [RES] =\n 671316\n            [SHR] =\n 140004\n            [S] =\n S\n            [%CPU] =\n 43.8\n            [%MEM] =\n 4.2\n            [TIME+] =\n 29:44.62\n            [COMMAND] =\n chrome\n        )\n    ... snip\n)\n\n\n\n\n\nTotal Disk Space\n\n\nGet total disk space in bytes.\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\npath\n\n\nstring\n\n\nA directory of the filesystem or disk partition.\n\n\n/\n\n\n\n\n\n\n\n\nCall\n\n\n$client-\nsystem-\ntotal_disk_space();\n\n\n\n\n\n\nResponse\n\n\n101369536512\n\n\n\n\n\nUname\n\n\nGet system name/kernel version.\n\n\nCall\n\n\n$client-\nsystem-\nuname();\n\n\n\n\n\n\nResponse\n\n\nLinux 4.13.0-41-generic\n\n\n\n\n\nUptime\n\n\nGet system uptime string.\n\n\nCall\n\n\n$client-\nsystem-\nuptime();\n\n\n\n\n\n\nResponse\n\n\nup 1 day, 17 hours, 31 minutes\n\n\n\n\n\nTesting\n\n\nThere are no tests setup for this component.\n\n\nContributing\n\n\nPlease see \nCONTRIBUTING\n for details.\n\n\nSecurity\n\n\nIf you discover any security related issues, please contact me via \nhttps://cherone.co.uk\n instead of using the issue tracker.\n\n\nCredits\n\n\n\n\nLawrence Cherone\n\n\nAll Contributors\n\n\n\n\nDevelopment Encouragement\n\n\nIf you use this project and make money from it or want to show your appreciation,\nplease feel free to make a donation \nhttps://www.paypal.me/lcherone\n, thanks.\n\n\nSponsors\n\n\nGet your company or name listed throughout the documentation and on each github repository, contact me at \nhttps://cherone.co.uk\n for further details.\n\n\nLicense\n\n\nThe MIT License (MIT). Please see \nLicense File\n for more information.\n\n\nSee the \norganisations page\n for additional components.", 
            "title": "System"
        }, 
        {
            "location": "/#system", 
            "text": "A system component which gives you access to server information.", 
            "title": "System"
        }, 
        {
            "location": "/#install", 
            "text": "Require this package with composer using the following command:  $ composer require plinker/system", 
            "title": "Install"
        }, 
        {
            "location": "/#client", 
            "text": "Creating a client instance is done as follows:  ?php  require   vendor/autoload.php ;  /**   * Initialize plinker client.   *   * @param string $server - URL to server listener.   * @param string $config - server secret, and/or a additional component data   */  $client   =   new   \\Plinker\\Core\\Client ( \n     http://example.com/server.php , \n     [ \n         secret   =   a secret password \n     ]  );  // or using global function  $client   =   plinker_client ( http://example.com/server.php ,   a secret password );", 
            "title": "Client"
        }, 
        {
            "location": "/#methods", 
            "text": "Once setup, you call the class though its namespace to its method.", 
            "title": "Methods"
        }, 
        {
            "location": "/#enumerate", 
            "text": "The enumerate method is used to call multiple methods in a single call to reduce RPC requests.     Parameter  Type  Description  Default      methods  string  array  A string or an array of methods    params  array  An array of params  []     The method could be used to call a single method, or multiple with parameters.  Call  $client- system- enumerate([       arch ,       hostname ,       disks  =  [ / ],       ping  =  [ https://google.com ],  ]);  // or single method  $client- system- enumerate( disks , [ / ]);   Response  Array\n(\n    [arch] =  x86_64\n\n    [hostname] =  plinker\n    [disks] =  Array\n        (\n            [0] =  Array\n                (\n                    [Filesystem] =  /dev/sdb1\n                    [Type] =  ext4\n                    [Size] =  95G\n                    [Used] =  85G\n                    [Avail] =  5.2G\n                    [Used (%)] =  95%\n                    [Mounted] =  /\n                )\n\n        )\n\n    [ping] =  -1\n)", 
            "title": "Enumerate"
        }, 
        {
            "location": "/#arch", 
            "text": "Returns the system architecture.  Call  $client- system- arch();   Response  x86_64", 
            "title": "Arch"
        }, 
        {
            "location": "/#clear-swap", 
            "text": "Clear swap space,  requires root, so should be used with task .  Call  $client- system- clear_swap();   Response", 
            "title": "Clear Swap"
        }, 
        {
            "location": "/#cpu-info", 
            "text": "Returns CPU information from  /proc/cpuinfo .  Call  $client- system- cpuinfo();   Response  processor   : 0\nvendor_id   : AuthenticAMD\ncpu family  : 16\nmodel       : 4\nmodel name  : AMD Phenom(tm) II X2 555 Processor\nstepping    : 3\nmicrocode   : 0x10000b6\ncpu MHz     : 2500.000\ncache size  : 512 KB\nphysical id : 0\nsiblings    : 2\ncore id     : 0\ncpu cores   : 2\napicid      : 0\ninitial apicid  : 0\nfpu     : yes\nfpu_exception   : yes\ncpuid level : 5\nwp      : yes\nflags       : fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 ht syscall nx mmxext fxsr_opt pdpe1gb rdtscp lm 3dnowext 3dnow constant_tsc rep_good nopl nonstop_tsc cpuid extd_apicid pni monitor cx16 popcnt lahf_lm cmp_legacy svm extapic cr8_legacy abm sse4a misalignsse 3dnowprefetch osvw ibs skinit wdt hw_pstate retpoline retpoline_amd rsb_ctxsw vmmcall npt lbrv svm_lock nrip_save\nbugs        : tlb_mmatch apic_c1e fxsave_leak sysret_ss_attrs null_seg amd_e400 spectre_v1 spectre_v2\nbogomips    : 6429.18\nTLB size    : 1024 4K pages\nclflush size    : 64\ncache_alignment : 64\naddress sizes   : 48 bits physical, 48 bits virtual\npower management: ts ttp tm stc 100mhzsteps hwpstate\n\nprocessor   : 1\nvendor_id   : AuthenticAMD\ncpu family  : 16\nmodel       : 4\nmodel name  : AMD Phenom(tm) II X2 555 Processor\nstepping    : 3\nmicrocode   : 0x10000b6\ncpu MHz     : 2500.000\ncache size  : 512 KB\nphysical id : 0\nsiblings    : 2\ncore id     : 1\ncpu cores   : 2\napicid      : 1\ninitial apicid  : 1\nfpu     : yes\nfpu_exception   : yes\ncpuid level : 5\nwp      : yes\nflags       : fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 ht syscall nx mmxext fxsr_opt pdpe1gb rdtscp lm 3dnowext 3dnow constant_tsc rep_good nopl nonstop_tsc cpuid extd_apicid pni monitor cx16 popcnt lahf_lm cmp_legacy svm extapic cr8_legacy abm sse4a misalignsse 3dnowprefetch osvw ibs skinit wdt hw_pstate retpoline retpoline_amd rsb_ctxsw vmmcall npt lbrv svm_lock nrip_save\nbugs        : tlb_mmatch apic_c1e fxsave_leak sysret_ss_attrs null_seg amd_e400 spectre_v1 spectre_v2\nbogomips    : 6429.18\nTLB size    : 1024 4K pages\nclflush size    : 64\ncache_alignment : 64\naddress sizes   : 48 bits physical, 48 bits virtual\npower management: ts ttp tm stc 100mhzsteps hwpstate", 
            "title": "CPU Info"
        }, 
        {
            "location": "/#disk-space", 
            "text": "Returns disk space left in percentage.     Parameter  Type  Description  Default      path  string  A directory of the filesystem or disk partition.  /     Call  $client- system- disk_space();   Response  71", 
            "title": "Disk Space"
        }, 
        {
            "location": "/#disks", 
            "text": ".....     Parameter  Type  Description  Default      parse  bool  Parse output into an array  true     Call  $client- system- disks();  // dont parse  $client- system- disks(false);   Response  // Parsed\nArray\n(\n    [0] =  Array\n        (\n            [Filesystem] =  /dev/sdb1\n            [Type] =  ext4\n            [Size] =  95G\n            [Used] =  85G\n            [Avail] =  5.2G\n            [Used (%)] =  95%\n            [Mounted] =  /\n        )\n\n)\n\n// Unparsed\nFilesystem     Type  Size  Used Avail Use% Mounted on\n/dev/sdb1      ext4   95G   85G  5.2G  95% /", 
            "title": "Disks"
        }, 
        {
            "location": "/#distro", 
            "text": "Get system distro name.  Call  $client- system- distro();   Response  UBUNTU", 
            "title": "Distro"
        }, 
        {
            "location": "/#drop-cache", 
            "text": "Drop memory caches,  requires root, so should be used with task .  Call  $client- system- drop_cache();   Response  true", 
            "title": "Drop Cache"
        }, 
        {
            "location": "/#hostname", 
            "text": "Get the systems hostname.  Call  $client- system- hostname();   Response  plinker", 
            "title": "Hostname"
        }, 
        {
            "location": "/#load", 
            "text": "Get the systems load averages.  Call  $client- system- load();   Response  0.41 0.50 0.69 1/1474 6223", 
            "title": "Load"
        }, 
        {
            "location": "/#logins", 
            "text": "Returns an array of system logins.  Call  $client- system- logins();   Response  Array\n(\n    [0] =  Array\n        (\n            [User] =  root\n            [Terminal] =  pts/1tmux(2972).%0\n            [Date] =  Fri May 11 08:25\n            [Disconnected] =  11:01\n            [Duration] =  02:35\n        )\n\n    [1] =  Array\n        (\n            [User] =  root\n            [Terminal] =  pts/1tmux(542).%0\n            [Date] =  Thu May 10 15:01\n            [Disconnected] =  08:11\n            [Duration] =  17:09\n        )\n\n    [2] =  Array\n        (\n            [User] =  Reboot\n            [Terminal] =  \n            [Date] =  \n            [Disconnected] =  \n            [Duration] =  \n        )\n\n    [3] =  Array\n        (\n            [User] =  root\n            [Terminal] =  pts/1tmux(5310).%0\n            [Date] =  Thu May 10 07:42\n            [Disconnected] =  crash\n            [Duration] =  07:19\n        )\n    )\n    ... snip\n)", 
            "title": "Logins"
        }, 
        {
            "location": "/#machine-id", 
            "text": "Returns the  machine-id  for the system, generates one if does not have one.  Call  $client- system- machine_id();   Response  82c887bcf6da43e5952fad9fd6ed15b6", 
            "title": "Machine ID"
        }, 
        {
            "location": "/#memory-stats", 
            "text": "Returns an array of memory stats for, used, cached and free in percentage values.  Call  $client- system- memory_stats();   Response  Array\n(\n    [used] =  15\n    [cache] =  0\n    [free] =  85\n)", 
            "title": "Memory Stats"
        }, 
        {
            "location": "/#memory-total", 
            "text": "Get the total amount of memory in kB  Call  $client- system- memory_total();   Response  16167888", 
            "title": "Memory Total"
        }, 
        {
            "location": "/#netstat", 
            "text": "Get network connections.     Parameter  Type  Description  Default      parse  bool  Parse output into an array  true     Call  $client- system- netstat();   Response  Array\n(\n    [0] =  Array\n        (\n            [Proto] =  tcp\n            [Recv-Q] =  0\n            [Send-Q] =  0\n            [Local Address] =  0.0.0.0:80\n            [Foreign Address] =  0.0.0.0:*\n            [State] =  LISTEN\n            [PID/Program] =  1169/nginx:\n            [Process Name] =  worker\n        )\n    ... snip\n)", 
            "title": "Netstat"
        }, 
        {
            "location": "/#ping", 
            "text": "Ping a hostname and return connection timing in milliseconds.     Parameter  Type  Description  Default      host  string  Server hostname     port  int  Service port, defaults to web  80     Call  $client- system- ping( google.com );   Response  31.18", 
            "title": "Ping"
        }, 
        {
            "location": "/#pstree", 
            "text": "Return system process tree  Call  $client- system- pstree();   Response  systemd-+-Brackets-+-Brackets---Brackets---Brackets-+-{Chrome_ChildIOT}\n        |          |                                |-2*[{CompositorTileW}]\n        |          |                                |-{Compositor}\n        |          |                                |-{HTMLParserThrea}\n        |          |                                |-{Renderer::FILE}\n        |          |                                |-{WorkerPool/203}\n        |          |                                |-{WorkerPool/210}\n        |          |                                |-{WorkerPool/212}\n        |          |                                `-{WorkerPool/213}\n        |          |-Brackets-node-+-5*[{Brackets-node}]\n        |          |               `-4*[{V8 WorkerThread}]\n        |          |-{AudioThread}\n        |          |-2*[{Brackets}]\n        |          |-3*[{BrowserBlocking}]\n        |          |-{CachePoolWorker}\n        |          |-{Chrome_CacheThr}\n        |          |-{Chrome_DBThread}\n        |          |-{Chrome_DevTools}\n        |          |-{Chrome_FileThre}\n        |          |-{Chrome_FileUser}\n        |          |-{Chrome_IOThread}\n        |          |-{Chrome_ProcessL}\n        |          |-{CompositorTileW}\n        |          |-{IndexedDB}\n        |          |-{NetworkChangeNo}\n        |          |-{WorkerPool/1747}\n        |          |-{gdbus}\n        |          |-{gmain}\n        |          |-{inotify_reader}\n        |          |-{sandbox_ipc_thr}\n        |          `-{threaded-ml}\n        |-LXDui-0.0.9-x86---{LXDui-0.0.9-x86}\n... snip", 
            "title": "PStree"
        }, 
        {
            "location": "/#reboot", 
            "text": "Reboot the server,  requires root, so should be used with task .  Call  $client- system- reboot();   Response  true", 
            "title": "Reboot"
        }, 
        {
            "location": "/#server-cpu-usage", 
            "text": "Returns the current CPU usage in percentage value.  Call  $client- system- server_cpu_usage();   Response  23", 
            "title": "Server CPU Usage"
        }, 
        {
            "location": "/#system-updates", 
            "text": "Check whether the system has updates.  Call  $client- system- system_updates();   Response  1=has updates, 0=no updates, -1=unknown", 
            "title": "System Updates"
        }, 
        {
            "location": "/#top", 
            "text": "Get top output as an array.     Parameter  Type  Description  Default      parse  bool  Parse output into an array  true     Call  $client- system- top();   Response  Array\n(\n    [0] =  Array\n        (\n            [PID] =  27475\n            [USER] =  user\n            [PR] =  20\n            [NI] =  0\n            [VIRT] =  1785692\n            [RES] =  671316\n            [SHR] =  140004\n            [S] =  S\n            [%CPU] =  43.8\n            [%MEM] =  4.2\n            [TIME+] =  29:44.62\n            [COMMAND] =  chrome\n        )\n    ... snip\n)", 
            "title": "Top"
        }, 
        {
            "location": "/#total-disk-space", 
            "text": "Get total disk space in bytes.     Parameter  Type  Description  Default      path  string  A directory of the filesystem or disk partition.  /     Call  $client- system- total_disk_space();   Response  101369536512", 
            "title": "Total Disk Space"
        }, 
        {
            "location": "/#uname", 
            "text": "Get system name/kernel version.  Call  $client- system- uname();   Response  Linux 4.13.0-41-generic", 
            "title": "Uname"
        }, 
        {
            "location": "/#uptime", 
            "text": "Get system uptime string.  Call  $client- system- uptime();   Response  up 1 day, 17 hours, 31 minutes", 
            "title": "Uptime"
        }, 
        {
            "location": "/#testing", 
            "text": "There are no tests setup for this component.", 
            "title": "Testing"
        }, 
        {
            "location": "/#contributing", 
            "text": "Please see  CONTRIBUTING  for details.", 
            "title": "Contributing"
        }, 
        {
            "location": "/#security", 
            "text": "If you discover any security related issues, please contact me via  https://cherone.co.uk  instead of using the issue tracker.", 
            "title": "Security"
        }, 
        {
            "location": "/#credits", 
            "text": "Lawrence Cherone  All Contributors", 
            "title": "Credits"
        }, 
        {
            "location": "/#development-encouragement", 
            "text": "If you use this project and make money from it or want to show your appreciation,\nplease feel free to make a donation  https://www.paypal.me/lcherone , thanks.", 
            "title": "Development Encouragement"
        }, 
        {
            "location": "/#sponsors", 
            "text": "Get your company or name listed throughout the documentation and on each github repository, contact me at  https://cherone.co.uk  for further details.", 
            "title": "Sponsors"
        }, 
        {
            "location": "/#license", 
            "text": "The MIT License (MIT). Please see  License File  for more information.  See the  organisations page  for additional components.", 
            "title": "License"
        }
    ]
}